# $OpenBSD: relayd.conf,v 1.3 2014/12/12 10:05:09 reyk Exp $
#
# Macros
#
ext_addr="em0"
ext_addr6="2001:470:b35c:ed9e::ace:face"

int_addr="10.10.10.10"
int_addr6="fd80:1fe9:fcee:1337::ace:face"

web_addr="10.0.0.1"
web_addr6="fd80:1fe9:fcee:cafe::ace:face"

webhost1="172.16.0.172"
webhost61="fd80:1fe9:fcee:abba::bad:face"

webhost2="192.168.0.192"
webhost62="fd80:1fe9:fcee:bead::bad:face"

#
# Global Options
#
# interval 10
# timeout 1000
# prefork 5

#
# Each table will be mapped to a pf table.
#
#table <dnshosts> {}
#table <dnshosts6> {}
#table <ntphosts> {}
#table <ntphosts6> {}
table <webhosts> { $webhost1 $webhost2 }
table <webhosts6> { $webhost61 $webhost62 }
table <fallback> { 10.10.10.10 }
table <fallback6> { fd80:1fe9:fcee:1337::ace:face }

#
# Services will be mapped to a rdr rule.
#
redirect "dns" {
	listen on $int_addr tcp port domain
	listen on $int_addr udp port domain

	# tagged RELAYD_DNS in pf.conf
	match pftag RELAYD_DNS
 
#	forward to <dnshosts> port domain check tcp
	forward to <fallback> port domain check tcp
}

redirect "dns6" {
	listen on $int_addr6 tcp port domain
	listen on $int_addr6 udp port domain

	# tagged RELAYD6_DNS in pf.conf
	match pftag RELAYD6_DNS
 
#	forward to <dnshosts6> port domain check tcp
	forward to <fallback6> port domain check tcp
}

redirect "ntp" {
	listen on $int_addr tcp port ntp
	listen on $int_addr udp port ntp

	# tagged RELAYD_NTP in pf.conf
	match pftag RELAYD_NTP

#	forward to <ntphosts> port ntp check tcp
	forward to <fallback> port ntp check icmp
}

redirect "ntp6" {
	listen on $int_addr6 tcp port ntp
	listen on $int_addr6 udp port ntp
	

	# tagged RELAYD6_NTP in pf.conf
	match pftag RELAYD6_NTP

#	forward to <ntphosts6> port ntp check tcp
	forward to <fallback6> port ntp check icmp
}

redirect www {
	listen on $ext_addr tcp port http
	listen on $ext_addr udp port http
	listen on $web_addr tcp port http
	listen on $web_addr udp port http

	# tagged RELAYD in pf.conf
	match pftag RELAYD_WWW

#	forward to <webhosts> check http "/" code 200
	forward to <fallback> check http "/" code 200
}

redirect www6 {
	listen on $ext_addr6 tcp port http
	listen on $ext_addr6 udp port http
	listen on $web_addr6 tcp port http
	listen on $web_addr6 udp port http

	# tagged RELAYD6 in pf.conf
	match pftag RELAYD6_WWW

#	forward to <webhosts6> check http "/" code 200
	forward to <fallback6> check http "/" code 200
}

#
# Relay and protocol for HTTP layer 7 loadbalancing and SSL/TLS acceleration
#
http protocol https {
	return error
	block

	match request header append "X-Forwarded-For" \
		value "$REMOTE_ADDR"
	match request header append "X-Forwarded-By" \
		value "$SERVER_ADDR:$SERVER_PORT"
	match request header set "Connection" value "close"

	pass request header "Host" value "freedns.afraid.org" tag "RELAYD"

	# Various TCP performance options
	tcp { nodelay, sack, socket buffer 65536, backlog 128 }
}

relay wwwtls {
	# Run as a SSL/TLS accelerator
	listen on $web_addr port https tls

	protocol https

	# Forward to hosts in the webhosts table using a src/dst hash
#	forward to <webhosts> port http mode loadbalance \
#		check http "/" code 200
	forward to <fallback> port http \
		check http "/" code 200
}

relay wwwtls6 {
	listen on $web_addr6 port https tls
	protocol https
#	forward to <webhosts6> port http mode loadbalance \
#		check http "/" code 200
	forward to <fallback6> port http \
		check http "/" code 200
}

#
# Relay and protocol for simple TCP forwarding on layer 7
#
#protocol sshtcp {
	# The TCP_NODELAY option is required for "smooth" terminal sessions
#	tcp nodelay
#}

#relay sshgw {
	# Run as a simple TCP relay
#	listen on $ext_addr port 2222
#	protocol sshtcp

	# Forward to the shared carp(4) address of an internal gateway
#	forward to $sshhost1 port 22
#}

#
# Relay and protocol for a transparent HTTP proxy
#
#http protocol httpfilter {
	# Return HTTP/HTML error pages to the client
#	return error

	# Block disallowed sites
#	match request label "URL filtered!"
#	block request quick url "www.example.com/" value "*"

	# Block disallowed browsers
#	match request label "Please try a <em>different Browser</em>"
#	block request quick header "User-Agent" \
#	    value "Mozilla/4.0 (compatible; MSIE *"

	# Block some well-known Instant Messengers
#	match request label "Instant messenger disallowed!"
#	block response quick header "Content-Type" \
#	    value "application/x-msn-messenger"
#	block response quick header "Content-Type" value "app/x-hotbar-xip20"
#	block response quick header "Content-Type" value "application/x-icq"
#	block response quick header "Content-Type" value "AIM/HTTP"
#	block response quick header "Content-Type" \
#	    value "application/x-comet-log"
#}

#relay httpproxy {
	# Listen on localhost, accept diverted connections from pf(4)
#	listen on 127.0.0.1 port 8080
#	protocol httpfilter

	# Forward to the original target host
#	forward to destination
#}
